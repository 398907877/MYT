package com.yihu.myt.dao;import com.common.unique.AppUnique;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.ReplyModelSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.ReplyModelVo;public class ReplyModelDAO {	/**	 * 添加	 */	public void insertReplyModel(ReplyModelVo vo, JdbcConnection conn)			throws Exception {		Sql sql = DB.me().createSql(ReplyModelSqlNameEnum.insertReplyModel);		sql.addParamValue(AppUnique.nextInt("modelID",MyDatabaseEnum.boss));		sql.addParamValue(vo.getTitle());		sql.addParamValue(vo.getTemplate());		sql.addParamValue(vo.getFileName());		sql.addParamValue(vo.getModeType());		sql.addParamValue(vo.getStatus());		sql.addParamValue(vo.getInsertTime());		sql.addParamValue(vo.getModelUserID());		DB.me().insert(conn, sql);	}	/**	 * 添加	 */	public int insertReplyModelVo(ReplyModelVo vo, JdbcConnection conn)			throws Exception {		Sql sql = DB.me().createSql(ReplyModelSqlNameEnum.insertReplyModel);		int rt = AppUnique.nextInt("modelID",MyDatabaseEnum.boss)+1;		sql.addParamValue(AppUnique.nextInt("modelID",MyDatabaseEnum.boss)+1);		sql.addParamValue(vo.getTitle());		sql.addParamValue(vo.getTemplate());		sql.addParamValue(vo.getFileName());		sql.addParamValue(vo.getModeType());		sql.addParamValue(vo.getStatus());		sql.addParamValue(vo.getInsertTime());		sql.addParamValue(vo.getModelUserID());		sql.addParamValue(vo.getIfSystem());		System.out.println(sql.getSqlString());		DB.me().insert(conn, sql);		return rt;	}	/**	 * 修改	 */	public void updateReplyModelByCondition(ReplyModelVo vo, JdbcConnection conn)			throws Exception {		Sql sql = DB.me().createSql(				ReplyModelSqlNameEnum.updateReplyModelByCondition);		if (vo == null || StringUtil.isEmpty(vo.getModelID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (vo.getStatus() != null) {			condition.append(" Status=?").append(",");			sql.addParamValue(vo.getStatus());		}		if (StringUtil.isNotEmpty(vo.getTemplate())) {			condition.append(" Template=?").append(",");			sql.addParamValue(vo.getTemplate());		}		if (StringUtil.isNotEmpty(vo.getTitle())) {			condition.append("  Title=?").append(",");			sql.addParamValue(vo.getTitle());		}		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getModelID());		}		DB.me().update(conn, sql);	}}