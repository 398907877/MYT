package com.yihu.myt.service.service;import java.util.List;import com.coreframework.ioc.By;import com.coreframework.db.JdbcConnection;import com.yihu.myt.vo.CloseQueVo;import com.yihu.myt.vo.QuesMainVo;import com.yihu.myt.service.service.impl.QuesMainService;
@By(QuesMainService.class)
public interface IQuesMainService{					/**	 * 查询本月的关闭数量  --   是否 150条	 */		public List<CloseQueVo>  queryCloseQueDoctorAndCount(String start,String end) throws Exception;		/**	 *  用户id  获取最新的的10 条 docuid          ----ForQueryDoctorId   接收返回的json 	 */	public String  userIdgetDoctorUid(Integer userId) throws Exception;			/**	 * 查找 addlove   3  or  10 	 * */	public Integer queryaddlovecount(String start,String end, String docid) throws Exception;					/**	 * 保存到关闭表	ZIXUN_rebackaddlove	 * */	public Integer saveAddlove(String quesMainId,String doctorId) throws Exception;			/**	 * 查找  今天  公共咨询的数量	 * */	public Integer queryCountBytodaypub(String start,String end, String docid) throws Exception;		/**	 * 保存到关闭表	ZIXUN_CloseQue	 * */	public Integer saveCloseQue(String quesMainId,String doctorId ,String queFlag) throws Exception;	
	/**	*获取列表记录数	*/	public Integer queryQuesMainCountByCondition(QuesMainVo vo) throws Exception;	public Integer querySameQueCont(QuesMainVo vo) throws Exception;	
	/**	*获取列表	*/	public List<QuesMainVo> queryQuesMainListByCondition(QuesMainVo vo) throws Exception;	public List<QuesMainVo> queryQuesMainListByStatus(QuesMainVo vo,Integer start , Integer pageSize) throws Exception;	public List<QuesMainVo> queryQuesMainListForDoctor(QuesMainVo vo,Integer start , Integer pageSize) throws Exception;	public int  queryQuesMainListByStatusCount(QuesMainVo vo) throws Exception;	public int  queryQuesMainListByStatusCountForUser(QuesMainVo vo) throws Exception;	public Integer querCountDcAnswerQus(QuesMainVo vo) throws Exception;	public String quesListForDoctorWaitAnswerCountNoFreeLastTime(QuesMainVo vo) throws Exception ;
	/**	*添加	*/	public int insertQuesMain(QuesMainVo vo) throws Exception;
	/**	*修改	*/	public void updateQuesMainByCondition(QuesMainVo vo,JdbcConnection conn) throws Exception;	public int updateQMainByCondition(QuesMainVo vo, JdbcConnection conn) throws Exception;	/**	*更新订单信息	*/	public int updateQuesMain(QuesMainVo vo) throws Exception;	/**	验证问题是否存在	*/	public Boolean queryQuesMainExist(QuesMainVo vo) throws Exception;	/**	*传入参数返回问题对象	*/	public QuesMainVo queryQuesMainByCondition(QuesMainVo vo) throws Exception;	public QuesMainVo queryQuestionLibraryByCondition(QuesMainVo vo) throws Exception;		public List<QuesMainVo> getReportList(QuesMainVo vo,int start,int pageSize) throws Exception;	public int getReportListCount(QuesMainVo vo)throws Exception;	public Integer querCountOverQus(QuesMainVo vo)	throws Exception ;	public Integer querCountAnswerQus(QuesMainVo vo)	throws Exception ;	public com.common.json.JSONObject querTeamQus(QuesMainVo vo,String time) throws Exception ;	public String queryDesignationQuesList(QuesMainVo vo, Integer quesType,			Integer queStatus , Integer provinceID,Integer cityID, Integer pageSize, Integer pageIndex) throws Exception;	public Integer  queryDesignationQuesList(QuesMainVo vo,Integer quesType,Integer queStatus,Integer provinceID) throws Exception;	public String queryDesignationQuesListForApp(QuesMainVo vo,	Integer quesType, Integer pageSize, Integer pageIndex)			throws Exception ;	public String queryQuestionLibraryListForApp(QuesMainVo vo,	Integer quesType, Integer pageSize, Integer pageIndex)			throws Exception ;	public Integer queryQuestionLibraryCountForApp(QuesMainVo vo,	Integer quesType)			throws Exception;	public Integer queryDesignationCountQuesListForApp(QuesMainVo vo,	Integer quesType)			throws Exception;	public Integer queryDesignationCountQuesListForAppV2(QuesMainVo vo,	Integer quesType)			throws Exception;		public String queryQuesAndPatient(QuesMainVo vo) throws Exception;	public Integer queryDoctorQuestionLibraryListCount(QuesMainVo vo, Integer quesType,			Integer queStatus, Integer provinceID) throws Exception;		public String queryDesignationQuestionLibraryList(QuesMainVo vo, Integer quesType,			Integer queStatus, Integer provinceID, Integer cityID,			Integer pageSize, Integer pageIndex) throws Exception ;	public Integer querCountHaveQus(QuesMainVo vo) throws Exception ;	public com.common.json.JSONObject queryQuesCountForSendSMS(QuesMainVo vo)			throws Exception;		public String quesReturnList(QuesMainVo vo,String beginTIme,String endTIme,Integer pageSize, Integer pageIndex) throws Exception ;//驳回问题列表	public Integer quesDoctorCheckListCount(QuesMainVo vo,String beginTIme,String endTIme) throws Exception;	public String quesDoctorCheckList(QuesMainVo vo,String beginTIme,String endTIme,Integer pageSize, Integer pageIndex) throws Exception ;//审核问题列表
	public Integer quesReturnListCount(QuesMainVo vo,String beginTIme,String endTIme) throws Exception ;		public String quesFreeOverTimeList(QuesMainVo vo,int type,int ifFree,Integer pageSize, Integer pageIndex) throws Exception;	public Integer quesFreeOverTimeListCount(QuesMainVo vo,int type,int ifFree) throws Exception ;		public Integer quesListCountForCheckTeam(QuesMainVo vo,Integer dcid,Integer dcrid,int type,String btime,String etime) throws Exception;	public String quesListForCheckTeam(QuesMainVo vo,Integer dcid,Integer dcrid,int type,String btime,String etime,Integer pageSize, Integer pageIndex) throws Exception ;			public Integer quesDcSubCheckCount(QuesMainVo vo) throws Exception;	public String quesDcSubCheck(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception;		public Integer quesListForDoctorAnswerAndOverCount(QuesMainVo vo) throws Exception ;//结束的问题数量	public String quesListForDoctorAnswerAndOver(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//结束的问题		public Integer quesListForDoctorAnswerAndOverCountV5(QuesMainVo vo) throws Exception ;//结束的问题数量 V5	public String quesListForDoctorAnswerAndOverV5(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//结束的问题列表 V5				//TODO WUJIAJUN	public String quesListForDoctorAnswerAndOverV2(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//结束的问题		public Integer quesListForDoctorAnswerForDeptsAndOverCount(QuesMainVo vo) throws Exception;//结束的科室问题数量	public String quesListForDoctorAnswerForDeptsAndOver(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//结束的问题	public Integer quesListForDoctorAnswerNoOverCount(QuesMainVo vo) throws Exception ;//未结束的咨询数量	public String quesListForDoctorAnswerNoOver(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;	//未结束的咨询	//TODO WUJIAJUN	public String quesListForDoctorAnswerNoOverV2(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;	//未结束的咨询		public Integer quesListForDoctorAnswerNoOverDeptsCount(QuesMainVo vo) throws Exception ;//未结束的科室咨询数量	public String quesListForDoctorAnswerDeptsNoOver(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception;//未结束的可是咨询		public Integer quesListForDoctorWaitAnswerDeptsCount(QuesMainVo vo) throws Exception;//等待回复的咨询数量（科室咨询）	public String quesListForDoctorWaitAnswerDepts(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception;//等待回复的咨询（科室咨询）	public Integer quesListForDoctorWaitAnswerCount(QuesMainVo vo,int searchType,String disease) throws Exception ;//等待回复的咨询数量	public Integer quesListForDoctorWaitAnswerCountNoFree(QuesMainVo vo) throws Exception ;//等待回复的付费咨询数量（不包括科室咨询）	public String quesListForDoctorWaitAnswer(QuesMainVo vo,Integer pageSize, Integer pageIndex,int searchType,String disease) throws Exception;//等待咨询的问题		public String quesListForDoctorWaitAnswerNoFreeQues(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception;//医生问题列表 指定我的	//TODO WUJIAJUN	public String quesListForDoctorWaitAnswerNoFreeQuesV2(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception;//医生问题列表 指定我的	public Integer quesListForDoctorWaitAnswerCountNoFreeQues(QuesMainVo vo) throws Exception;//医生问题列表 指定我的数量	public String quesListForDoctorWaitAnswerFreeQues(QuesMainVo vo,Integer pageSize, Integer pageIndex,int searchType,String stones,int proid) throws Exception;//医生问题列表 我感兴趣的问题	//TODO WUJIAJUN	public String quesListForDoctorWaitAnswerFreeQuesV2(QuesMainVo vo,Integer pageSize, Integer pageIndex,int searchType,String stones,int proid) throws Exception;//医生问题列表 我感兴趣的问题	public Integer quesListForDoctorWaitAnswerFreeQuesCount(QuesMainVo vo,int searchType,String stones) throws Exception ;//医生问题列表 我感兴趣的问题数量	public String queReportForCity(String time,Integer pageSize, Integer pageIndex) throws Exception ;//根据城市统计	public Integer queReportForCityCount(String time) throws Exception;	public String queReportForPlatform(String time,Integer pageSize, Integer pageIndex) throws Exception;//根据渠道统计	public Integer queReportForPlatformCount(String time) throws Exception;	public String queReportForDays(String time,Integer pageSize, Integer pageIndex) throws Exception ;//根据日期统计	public Integer queReportForDaysCount(String time) throws Exception;	public String queReportForDepts(String time ,Integer pageSize, Integer pageIndex) throws Exception ;//根据科室统计	public Integer queReportForDeptsCount(String time) throws Exception;			public String quesListForDoctorAnswerForDeptsAndOverChangzheng(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//上海长征专属	public Integer quesListForDoctorAnswerForDeptsAndOverCountChangzheng(QuesMainVo vo) throws Exception ;					//用户接口 获取公开问题	public Integer quesListForDoctorAnswerAndOverCountForUser(QuesMainVo vo) throws Exception ;//结束的问题数量	public String quesListForDoctorAnswerAndOverV2ForUser(QuesMainVo vo,Integer pageSize, Integer pageIndex) throws Exception ;//结束的问题		}