package com.yihu.myt.service.service.impl;import java.sql.SQLException;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.DiseaseSqlNameEnum;import com.yihu.myt.enums.MyTableNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.DiseaseVo;import com.yihu.myt.service.service.IDiseaseService;
public class DiseaseService implements IDiseaseService{
	/**	*获取列表记录数	*/	public Integer queryDiseaseCountByCondition(DiseaseVo vo) throws Exception{		Sql sql = DB.me().createSql(DiseaseSqlNameEnum.queryDiseaseCountByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}
	/**	*获取列表	*/	public List<DiseaseVo> queryDiseaseListByCondition(DiseaseVo vo) throws Exception{		Sql sql = DB.me().createSql(DiseaseSqlNameEnum.queryDiseaseListByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getASK_QuesID()!=null){			condition.append(" and ASK_QuesID= " + 	vo.getASK_QuesID());		}		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		List<DiseaseVo> list = DB.me().queryForBeanList(MyDatabaseEnum.YiHuNet2008, sql,DiseaseVo.class);		return list;	}
	/**	*添加	*/	public int insertDisease(DiseaseVo vo) throws Exception{		try {			int r = DB.me().insert(					MyDatabaseEnum.YiHuNet2008,					DB.me().createInsertSql(vo, MyTableNameEnum.ZiXun_Disease,							"dbo"));			return r;		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}	public int deleteDiseases(DiseaseVo vo) throws Exception{		Sql sql = DB.me().createSql(DiseaseSqlNameEnum.deleteDiseases);		StringBuilder condition = new StringBuilder();		if(vo.getASK_QuesID()!=null){			condition.append(" and ASK_QuesID = " + vo.getASK_QuesID());		}		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}
	/**	*修改	*/	public int updateDisease(DiseaseVo vo) throws Exception {		try {			StringBuilder condition = new StringBuilder();			if (vo.getDISEASE_ID() > 0) {				condition.append("  DISEASE_ID = " + vo.getDISEASE_ID());				vo.setDISEASE_ID(null);				int r = DB.me().update(						MyDatabaseEnum.YiHuNet2008,						DB.me().createUpdateSql(vo,								MyTableNameEnum.ZiXun_Disease,								condition.toString()));				return r;			} else {				return -1;			}		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}		public int updateDiseaseForAskQueID(DiseaseVo vo) throws Exception {		try {			StringBuilder condition = new StringBuilder();			if (vo.getASK_QuesID() > 0) {				condition.append("    ASK_QuesID = " + vo.getASK_QuesID());				vo.setASK_QuesID(null);				int r = DB.me().update(						MyDatabaseEnum.YiHuNet2008,						DB.me().createUpdateSql(vo,								MyTableNameEnum.ZiXun_Disease,								condition.toString()));				return r;			} else {				return -1;			}		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}	public void updateDiseaseByCondition(DiseaseVo vo, JdbcConnection conn)			throws Exception {		Sql sql = DB.me()				.createSql(DiseaseSqlNameEnum.updateDiseaseByCondition);		if (vo == null || StringUtil.isEmpty(vo.getDISEASE_ID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getDISEASE_ID());		}		DB.me().update(conn, sql);	}
}