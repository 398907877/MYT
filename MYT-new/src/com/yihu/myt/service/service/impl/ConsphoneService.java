package com.yihu.myt.service.service.impl;import java.sql.SQLException;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.ConsphoneSqlNameEnum;import com.yihu.myt.enums.MyTableNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.ConsphoneVo;import com.yihu.myt.vo.OperconfigVo;import com.yihu.myt.vo.QuesMainVo;import com.yihu.myt.service.service.IConsphoneService;
public class ConsphoneService implements IConsphoneService{
	/**	*获取列表记录数	*/ 	public Integer queryConsphoneCountByCondition(ConsphoneVo vo) throws Exception{		Sql sql = DB.me().createSql(ConsphoneSqlNameEnum.queryConsphoneCountByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.boss, sql);		return count;	}
	/**	*获取列表	*/	public List<ConsphoneVo> queryConsphoneListByCondition(ConsphoneVo vo) throws Exception{		Sql sql = DB.me().createSql(ConsphoneSqlNameEnum.queryConsphoneListByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getDoctorid()!=null){			condition.append("  and Doctorid = ?");			sql.addParamValue(vo.getDoctorid());		}		sql.addVar("@condition", condition.toString());		sql.addVar("@page", " and  state = 1");		List<ConsphoneVo> list = DB.me().queryForBeanList(MyDatabaseEnum.boss, sql,ConsphoneVo.class);		return list;	}		public ConsphoneVo queryConsphoneByCondition(ConsphoneVo vo) throws Exception{		List<ConsphoneVo> list = this.queryConsphoneListByCondition(vo);		if (list == null || list.size() == 0) {			return null;		} else {			return list.get(0);		}	}	//getReportList
	/**	*添加	*/	public int insertConsphone(ConsphoneVo vo) throws Exception{				try {			int r = DB.me().insert(					MyDatabaseEnum.boss,					DB.me().createInsertSql(vo, MyTableNameEnum.MYT_CONSPHONE,							"dbo"));			return r;		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}
	/**	*修改	*/	public void updateConsphoneByCondition(ConsphoneVo vo,JdbcConnection conn) throws Exception{		Sql sql = DB.me().createSql(ConsphoneSqlNameEnum.updateConsphoneByCondition);		if (vo == null  || StringUtil.isEmpty(vo.getConsphoneid())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (condition.length() == 0) {		throw new Exception("未有更新SQL被执行！");		} else {		condition.deleteCharAt(condition.length() - 1);		sql.addVar("@condition", condition.toString());		sql.addParamValue(vo.getConsphoneid());		}		DB.me().update(conn, sql);		}	public int updateConsphone(ConsphoneVo vo) throws Exception {		try {			StringBuilder condition = new StringBuilder();			if(vo.getConsphoneid()>0){				condition.append("  Consphoneid = "+ vo.getConsphoneid());				vo.setConsphoneid(null);				int r = DB.me().update(						MyDatabaseEnum.boss,						DB.me().createUpdateSql(vo, MyTableNameEnum.MYT_CONSPHONE,condition.toString()));				return r;			}else{				return -1;			}					} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}
}