package com.yihu.myt.service.service.impl;import java.util.List;import com.common.json.JSONObject;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.dao.ConsEnrolDAO;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.ConsEnrolSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.ConsEnrolVo;import com.yihu.myt.service.service.IConsEnrolService;
public class ConsEnrolService implements IConsEnrolService{
ConsEnrolDAO consEnrolDAO = new ConsEnrolDAO();	/**	*获取用户所咨询过的电话咨询数据	*/	public String getMytConsenrols(ConsEnrolVo vo, Integer pageSize, Integer pageIndex) throws Exception{		Sql sql = DB.me().createSql(ConsEnrolSqlNameEnum.getMytConsenrols);		StringBuilder condition = new StringBuilder();		if(vo.getCARDID()!=null){			condition.append(" and cardid = ?"   );			sql.addParamValue(vo.getCARDID() );		}		sql.addVar("@c", condition.toString());		if (pageSize != 0 || pageIndex != 0) {			sql.addVar("@p", " and rowId >" + pageSize * pageIndex					+ " and rowId <=" + (pageIndex + 1) * pageSize);		} else {			sql.addVar("@p", "");		}		JSONObject list = DB.me().queryForJson(MyDatabaseEnum.boss, sql);		return list.toString();	}
	/**	*获取列表记录数	*/	public Integer queryConsEnrolCountByCondition(ConsEnrolVo vo) throws Exception{		Sql sql = DB.me().createSql(ConsEnrolSqlNameEnum.queryConsEnrolCountByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.boss, sql);		return count;	}
	/**	*获取列表	*/	public List<ConsEnrolVo> queryConsEnrolListByCondition(ConsEnrolVo vo) throws Exception{		Sql sql = DB.me().createSql(ConsEnrolSqlNameEnum.queryConsEnrolListByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		List<ConsEnrolVo> list = DB.me().queryForBeanList(MyDatabaseEnum.boss, sql,ConsEnrolVo.class);		return list;	}
	/**	*添加	*/	public void insertConsEnrol(ConsEnrolVo vo) throws Exception{		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.boss);		try {		conn.beginTransaction();		consEnrolDAO.insertConsEnrol(vo,conn);		conn.commitTransaction(true);		} catch (Exception e) {		conn.rollbackAndclose();		throw e;}}			/**	*添加	*/	public void updateConsEnrol(ConsEnrolVo vo) throws Exception{		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.boss);		try {		conn.beginTransaction();		consEnrolDAO.updateConsEnrolByCondition(vo,conn);		conn.commitTransaction(true);		} catch (Exception e) {		conn.rollbackAndclose();		throw e;}}}