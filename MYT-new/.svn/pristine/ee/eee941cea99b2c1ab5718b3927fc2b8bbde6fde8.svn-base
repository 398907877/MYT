package com.yihu.myt.dao;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.ConsWaterQualitySqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.ConsWaterQualityVo;public class ConsWaterQualityDAO {	/**	 * 添加	 */	public void insertConsWaterQuality(ConsWaterQualityVo vo,			JdbcConnection conn) throws Exception {		Sql sql = DB.me().createSql(				ConsWaterQualitySqlNameEnum.insertConsWaterQuality);		sql.addParamValue(vo.getcWaterID());		sql.addParamValue(vo.getQualityReult());		sql.addParamValue(vo.getConsType());		sql.addParamValue(vo.getQualityMemo());		sql.addParamValue(vo.getInputUserID());		sql.addParamValue(vo.getInputUserName());		sql.addParamValue(vo.getInputTime());		DB.me().insert(conn, sql);	}	/**	 * 修改	 */	public void updateConsWaterQualityByCondition(ConsWaterQualityVo vo,			JdbcConnection conn) throws Exception {		Sql sql = DB.me().createSql(				ConsWaterQualitySqlNameEnum.updateConsWaterQualityByCondition);		if (vo == null || StringUtil.isEmpty(vo.getQualityID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (vo.getConsType() != null) {			condition.append(" ConsType=?").append(",");			sql.addParamValue(vo.getConsType());		}		if (vo != null) {			condition.append(" cWaterID=?").append(",");			sql.addParamValue(vo.getcWaterID());		}		if (StringUtil.isNotEmpty(vo.getQualityMemo())) {			condition.append(" QualityMemo=?").append(",");			sql.addParamValue(vo.getQualityMemo());		}		if (vo.getQualityReult() != null) {			condition.append(" QualityReult=?").append(",");			sql.addParamValue(vo.getQualityReult());		}		if (StringUtil.isNotEmpty(vo.getInputUserID())) {			condition.append(" InputUserID=?").append(",");			sql.addParamValue(vo.getInputUserID());		}		if (StringUtil.isNotEmpty(vo.getInputUserName())) {			condition.append(" InputUserName=?").append(",");			sql.addParamValue(vo.getInputUserName());		}		if (StringUtil.isNotEmpty(vo.getInputTime())) {			condition.append(" InputTime=?").append(",");			sql.addParamValue(vo.getInputTime());		}		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getQualityID());		}		DB.me().update(conn, sql);	}}