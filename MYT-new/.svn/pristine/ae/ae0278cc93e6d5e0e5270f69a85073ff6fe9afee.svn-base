package com.yihu.myt.util;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.URLEncoder;
import java.util.Enumeration;
import java.util.Map;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;
import org.apache.commons.httpclient.methods.multipart.Part;

public class PostClient {
	
	public  static String url="http://f1.yihuimg.com/TFS/TFSServlet";
	
	
	public  static String dopost(String  file,Map<String, String>  para) throws HttpException, IOException{

		
		File temp = new File(file);
		
		PostMethod postMethod = new PostMethod(url);
		Part[]  parts = { new FilePart("file",temp)};
		
		
		for (String  key : para.keySet()) {
			System.out.println("key£º£º£º"+key);
			System.out.println("value£º£º£º"+para.get(key));
			postMethod.addRequestHeader(key, para.get(key));
		}
		

		
		
		
		postMethod.setRequestEntity(new MultipartRequestEntity(parts, postMethod.getParams()));
		
		
		
		HttpClient client = new HttpClient();
		client.getHttpConnectionManager().getParams().setConnectionTimeout(5000);
		client.executeMethod(postMethod);
		byte[]  in = postMethod.getResponseBody();
		
		
		String back= new String(in);
		System.err.println(back);
		
		return   back;
		
		
		
		
	}
	
	public  static  String  inTOstring(InputStream is){
		
		 BufferedReader reader = new BufferedReader(new InputStreamReader(is));   

	        StringBuilder sb = new StringBuilder();   

	    

	        String line = null;   

	        try {   

	            while ((line = reader.readLine()) != null) {   

	                sb.append(line + "/n");   

	            }   

	        } catch (IOException e) {   

	            e.printStackTrace();   

	        } finally {   

	            try {   

	                is.close();   

	            } catch (IOException e) {   

	                e.printStackTrace();   

	            }   

	        }   

	    

	        return sb.toString();   
	}
	
	

}
