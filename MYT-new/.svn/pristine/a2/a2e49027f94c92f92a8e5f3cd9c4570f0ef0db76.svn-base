package com.yihu.myt.dao;import java.util.List;import com.common.unique.AppUnique;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.DoctorQueSeachStoneSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.DoctorQueSeachStoneVo;
public class DoctorQueSeachStoneDAO {
	/**	*添加	*/	public void insertDoctorQueSeachStone(DoctorQueSeachStoneVo vo,JdbcConnection conn) throws Exception{		Sql sql = DB.me().createSql(DoctorQueSeachStoneSqlNameEnum.insertDoctorQueSeachStone);		sql.addParamValue(AppUnique.nextInt("doctorQueSeachStone",MyDatabaseEnum.boss));		sql.addParamValue(vo.getDoctorUid());		sql.addParamValue(vo.getSeachID());		sql.addParamValue(vo.getState());		sql.addParamValue(vo.getOperTime());		sql.addParamValue(vo.getNum());		sql.addParamValue(vo.getSeachType());		DB.me().insert(conn,sql);		}	public int insertDoctorQueSeachStoneRt(DoctorQueSeachStoneVo vo,JdbcConnection conn) throws Exception{		Sql sql = DB.me().createSql(DoctorQueSeachStoneSqlNameEnum.insertDoctorQueSeachStone);		int rt = AppUnique.nextInt("doctorQueSeachStone",MyDatabaseEnum.boss);		sql.addParamValue(rt);		sql.addParamValue(vo.getDoctorUid());		sql.addParamValue(vo.getSeachID());		sql.addParamValue(vo.getState());		sql.addParamValue(vo.getOperTime());		sql.addParamValue(vo.getNum());		sql.addParamValue(vo.getSeachType());		DB.me().insert(conn,sql);		return rt;		}
	/**	 * 修改	 */	public void updateDoctorQueSeachStoneByCondition(DoctorQueSeachStoneVo vo,			JdbcConnection conn) throws Exception {		Sql sql = DB				.me()				.createSql(						DoctorQueSeachStoneSqlNameEnum.updateDoctorQueSeachStoneByCondition);		if (vo == null || StringUtil.isEmpty(vo.getID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (vo.getState() != null) {			condition.append(" State=?").append(",");			sql.addParamValue(vo.getState());		}		if(vo.getSeachType()!=null){			condition.append(" SeachType=?").append(",");			sql.addParamValue(vo.getSeachType());		}		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getID());		}		DB.me().update(conn, sql);	}	/**	 * 修改	 */	public void updateDoctorQueSeachStoneByConditionForDoctorUid(DoctorQueSeachStoneVo vo,			JdbcConnection conn) throws Exception {		Sql sql = DB				.me()				.createSql(						DoctorQueSeachStoneSqlNameEnum.updateDoctorQueSeachStoneByConditionForDoctorUid);		if (vo == null || StringUtil.isEmpty(vo.getDoctorUid())) {			throw new Exception("  ");		}		StringBuilder condition = new StringBuilder();		if (vo.getState() != null) {			condition.append(" State=?").append(",");			sql.addParamValue(vo.getState());		}		/*if(vo.getSeachType()!=null){			condition.append(" SeachType=?").append(",");			sql.addParamValue(vo.getSeachType());		}*/		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getDoctorUid());			sql.addParamValue(vo.getSeachType());		}		DB.me().update(conn, sql);	}
}