package com.yihu.myt.service.service.impl;import java.sql.SQLException;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.DocSubCloseQuesSqlNameEnum;import com.yihu.myt.enums.MyTableNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.DocSubCloseQuesVo;import com.yihu.myt.service.service.IDocSubCloseQuesService;
public class DocSubCloseQuesService implements IDocSubCloseQuesService{
	/**	*获取列表记录数	*/	public Integer queryDocSubCloseQuesCountByCondition(DocSubCloseQuesVo vo) throws Exception{		Sql sql = DB.me().createSql(DocSubCloseQuesSqlNameEnum.queryDocSubCloseQuesCountByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}
	/**	*获取列表	*/	public List<DocSubCloseQuesVo> queryDocSubCloseQuesListByCondition(DocSubCloseQuesVo vo) throws Exception{		Sql sql = DB.me().createSql(DocSubCloseQuesSqlNameEnum.queryDocSubCloseQuesListByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getQueID()!=null){			condition.append(" and QueID = " + vo.getQueID()); 		}		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		List<DocSubCloseQuesVo> list = DB.me().queryForBeanList(MyDatabaseEnum.YiHuNet2008, sql,DocSubCloseQuesVo.class);		return list;	}		/**	*获取单个	*/	public DocSubCloseQuesVo queryDocSubCloseQues(DocSubCloseQuesVo vo) throws Exception{		List<DocSubCloseQuesVo> list = this.queryDocSubCloseQuesListByCondition(vo);		if (list == null || list.size() == 0) {			return null;		} else {			return list.get(0);		}		//return list;	}	
	/**	*添加	*/	public int insertDocSubCloseQues(DocSubCloseQuesVo vo) throws Exception{		try {			int r = DB.me().insert(					MyDatabaseEnum.YiHuNet2008,					DB.me().createInsertSql(vo, MyTableNameEnum.ZiXun_DocSubCloseQues,							"dbo"));			return r;		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}	public int updateDocSubCloseQuesByQueID(DocSubCloseQuesVo vo) throws Exception{		try {			StringBuilder condition = new StringBuilder();			if(vo.getQueID()>0){				condition.append("  QueID = "+ vo.getQueID());				vo.setDocSubCloseQuesID(null);				int r = DB.me().update(						MyDatabaseEnum.YiHuNet2008,						DB.me().createUpdateSql(vo, MyTableNameEnum.ZiXun_DocSubCloseQues,condition.toString()));				return r;			}else{				return -1;			}					} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}	
	/**	*修改	*/	public void updateDocSubCloseQuesByCondition(DocSubCloseQuesVo vo,JdbcConnection conn) throws Exception{Sql sql = DB.me().createSql(DocSubCloseQuesSqlNameEnum.updateDocSubCloseQuesByCondition);		if (vo == null  || StringUtil.isEmpty(vo.getDocSubCloseQuesID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (condition.length() == 0) {		throw new Exception("未有更新SQL被执行！");		} else {		condition.deleteCharAt(condition.length() - 1);		sql.addVar("@condition", condition.toString());		sql.addParamValue(vo.getDocSubCloseQuesID());		}		DB.me().update(conn, sql);		}
}