package com.yihu.myt.service.service.impl;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.dao.ReplyModelDAO;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.ReplyModelSqlNameEnum;import com.yihu.myt.vo.ReplyModelVo;import com.yihu.myt.service.service.IReplyModelService;public class ReplyModelService implements IReplyModelService {	ReplyModelDAO replyModelDAO = new ReplyModelDAO();	/**	 * 获取列表记录数	 */	public Integer queryReplyModelCountByCondition(ReplyModelVo vo)			throws Exception {		Sql sql = DB.me().createSql(				ReplyModelSqlNameEnum.queryReplyModelCountByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}	/**	 * 获取列表记录数	 */	public Integer queryReplyModelIfSystem(ReplyModelVo vo)			throws Exception {		Sql sql = DB.me().createSql(				ReplyModelSqlNameEnum.queryReplyModelCountifSystem);		StringBuilder condition = new StringBuilder();		if(vo.getModelID()!=null){			condition.append(" and ModelID =" + vo.getModelID()) ;		}		condition.append(" and ifSystem =1 and  Status =0") ;		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}	/**	 * 获取列表	 */	public List<ReplyModelVo> queryReplyModelListByCondition(ReplyModelVo vo)			throws Exception {		Sql sql = DB.me().createSql(				ReplyModelSqlNameEnum.queryReplyModelListByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getModelUserID()!=null){			condition.append(" and ModelUserID =" + vo.getModelUserID()) ;		}		if(vo.getStatus()!=null){			condition.append(" and Status =" + vo.getStatus()) ;		}		if(vo.getModeType()!=null){			condition.append(" and ModeType =  " + vo.getModeType() ) ;		}		if(vo.getIfSystem()!=null){			condition.append(" and  ifSystem =  " + vo.getIfSystem() +"  or  (Status=0 and modetype=0  and  ifSystem = 1  )") ;		}		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		List<ReplyModelVo> list = DB.me().queryForBeanList(				MyDatabaseEnum.YiHuNet2008, sql, ReplyModelVo.class);		return list;	}	/**	 * 获单个对象	 */	public ReplyModelVo  queryReplyModel(ReplyModelVo vo)throws Exception{		List<ReplyModelVo> list = this.queryReplyModelListByCondition(vo); 		if (list == null || list.size() == 0) {			return null;		} else {			return list.get(0);		}	}	/**	 * 添加	 */	public void insertReplyModel(ReplyModelVo vo) throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			replyModelDAO.insertReplyModel(vo, conn);			conn.commitTransaction(true);		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}	/**	 * 添加	 */	public void updateReplyModel(ReplyModelVo vo) throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			replyModelDAO.updateReplyModelByCondition(vo, conn);			conn.commitTransaction(true);		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}	public int insertReplyModelVo(ReplyModelVo vo) throws Exception{		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			int rt = replyModelDAO.insertReplyModelVo(vo, conn);			conn.commitTransaction(true);			return rt;		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}}