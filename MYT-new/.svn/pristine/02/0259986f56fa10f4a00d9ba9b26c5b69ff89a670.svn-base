package com.yihu.myt.dao;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.DoctorInfoSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.DoctorInfoVo;
public class DoctorInfoDAO {
	/**	*添加	*/	public void insertDoctorInfo(DoctorInfoVo vo,JdbcConnection conn) throws Exception{		Sql sql = DB.me().createSql(DoctorInfoSqlNameEnum.insertDoctorInfo);		sql.addParamValue(vo.getDoctorSN());		sql.addParamValue(vo.getDoctorUid());		sql.addParamValue(vo.getDoctorName());		sql.addParamValue(vo.getPhotoUri());		sql.addParamValue(vo.getDoctorSex());		sql.addParamValue(vo.getLCZC());		sql.addParamValue(vo.getDoctorCode());		sql.addParamValue(vo.getBaseDoctorID());		sql.addParamValue(vo.getSkill());		sql.addParamValue(vo.getHosDeptID());		sql.addParamValue(vo.getOrderId());		sql.addParamValue(vo.getStandardDeptID());		sql.addParamValue(vo.getServiceStatus());		sql.addParamValue(vo.getDeptName());		sql.addParamValue(vo.getLayer());		sql.addParamValue(vo.getDeptState());		sql.addParamValue(vo.getHospitalID());		sql.addParamValue(vo.getHosName());		sql.addParamValue(vo.getModeID());		sql.addParamValue(vo.getProvinceID());		sql.addParamValue(vo.getCityID());		sql.addParamValue(vo.getHosState());		sql.addParamValue(vo.getOrgId());		sql.addParamValue(vo.getBaseHospitalID());		sql.addParamValue(vo.getDisplayStatus());		sql.addParamValue(vo.getDoctorService());		sql.addParamValue(vo.getMain());		sql.addParamValue(vo.getDoctorGuid());		sql.addParamValue(vo.getHosDeptGuid());		sql.addParamValue(vo.getHosGuid());		sql.addParamValue(vo.getPROVINCESHORT());		sql.addParamValue(vo.getMainPhone());		DB.me().insert(conn,sql);		}
	/**	*修改	*/	public void updateDoctorInfoByCondition(DoctorInfoVo vo,JdbcConnection conn) throws Exception{Sql sql = DB.me().createSql(DoctorInfoSqlNameEnum.updateDoctorInfoByCondition);		if (vo == null  || StringUtil.isEmpty(vo.getDoctorSN())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (condition.length() == 0) {		throw new Exception("未有更新SQL被执行！");		} else {		condition.deleteCharAt(condition.length() - 1);		sql.addVar("@condition", condition.toString());		sql.addParamValue(vo.getDoctorSN());		}		DB.me().update(conn, sql);		}
}