package com.yihu.myt.service.service.impl;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.dao.DoctorQueSeachStoneDAO;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.DoctorQueSeachStoneSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.DoctorQueSeachStoneVo;import com.yihu.myt.service.service.IDoctorQueSeachStoneService;public class DoctorQueSeachStoneService implements IDoctorQueSeachStoneService {	DoctorQueSeachStoneDAO doctorQueSeachStoneDAO = new DoctorQueSeachStoneDAO();	/**	 * 获取列表记录数	 */	public Integer queryDoctorQueSeachStoneCountByCondition(			DoctorQueSeachStoneVo vo) throws Exception {		Sql sql = DB				.me()				.createSql(						DoctorQueSeachStoneSqlNameEnum.queryDoctorQueSeachStoneCountByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getDoctorUid()!=null){			condition.append(" and DoctorUid = " + vo.getDoctorUid());		}		if(vo.getState()!=null){			condition.append(" and State = " + vo.getState());		}		if(vo.getSeachType()!=null){			condition.append(" and SeachType = " + vo.getSeachType());		}		sql.addVar("@condition", condition.toString());		Integer count = DB.me().queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}	/**	 * 获取列表	 */	public List<DoctorQueSeachStoneVo> queryDoctorQueSeachStoneListByCondition(			DoctorQueSeachStoneVo vo) throws Exception {		Sql sql = DB				.me()				.createSql(						DoctorQueSeachStoneSqlNameEnum.queryDoctorQueSeachStoneListByCondition);		StringBuilder condition = new StringBuilder();		if (vo.getDoctorUid() != null) {			condition.append(" and DoctorUid = " + vo.getDoctorUid());		}		if(vo.getState()!=null){			condition.append(" and State = " + vo.getState());		}		if(vo.getSeachType()!=null){			condition.append(" and SeachType = " + vo.getSeachType());		}		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		System.out.println(sql.toString());		List<DoctorQueSeachStoneVo> list = DB.me().queryForBeanList(				MyDatabaseEnum.YiHuNet2008, sql, DoctorQueSeachStoneVo.class);		return list;	}	/**	 * 添加	 */	public void insertDoctorQueSeachStone(DoctorQueSeachStoneVo vo)			throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			doctorQueSeachStoneDAO.insertDoctorQueSeachStone(vo, conn);			conn.commitTransaction(true);		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}	public int insertDoctorQueSeachStoneRt(DoctorQueSeachStoneVo vo) throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			int rt = doctorQueSeachStoneDAO.insertDoctorQueSeachStoneRt(vo, conn);			conn.commitTransaction(true);			return rt;		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}	/**	 * 添加	 */	public void updateDoctorQueSeachStone(DoctorQueSeachStoneVo vo)			throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			doctorQueSeachStoneDAO.updateDoctorQueSeachStoneByCondition(vo,					conn);			conn.commitTransaction(true);		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}	public void updateDoctorQueSeachStoneForDoctorUid(DoctorQueSeachStoneVo vo)			throws Exception {		JdbcConnection conn = DB.me().getConnection(MyDatabaseEnum.YiHuNet2008);		try {			conn.beginTransaction();			doctorQueSeachStoneDAO					.updateDoctorQueSeachStoneByConditionForDoctorUid(vo, conn);			conn.commitTransaction(true);		} catch (Exception e) {			conn.rollbackAndclose();			throw e;		}	}}