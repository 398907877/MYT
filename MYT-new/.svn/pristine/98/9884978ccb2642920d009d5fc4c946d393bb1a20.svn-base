package com.yihu.myt.service.service.impl;import java.sql.SQLException;import java.util.List;import com.coreframework.db.DB;import com.coreframework.db.JdbcConnection;import com.coreframework.db.Sql;import com.yihu.myt.enums.MyDatabaseEnum;import com.yihu.myt.enums.MyTableNameEnum;import com.yihu.myt.enums.QuesCloseWaterSqlNameEnum;import com.yihu.myt.util.StringUtil;import com.yihu.myt.vo.QuesCloseWaterVo;import com.yihu.myt.service.service.IQuesCloseWaterService;public class QuesCloseWaterService implements IQuesCloseWaterService {	/**	 * 获取列表记录数	 */	public Integer queryQuesCloseWaterCountByCondition(QuesCloseWaterVo vo)			throws Exception {		Sql sql = DB.me().createSql(				QuesCloseWaterSqlNameEnum.queryQuesCloseWaterCountByCondition);		StringBuilder condition = new StringBuilder();		if(vo.getQuesID() != null){			condition.append(" and QuesID = " + vo.getQuesID());		}				sql.addVar("@condition", condition.toString());		Integer count = DB.me()				.queryForInteger(MyDatabaseEnum.YiHuNet2008, sql);		return count;	}	/**	 * 获取列表	 */	public List<QuesCloseWaterVo> queryQuesCloseWaterListByCondition(			QuesCloseWaterVo vo) throws Exception {		Sql sql = DB.me().createSql(				QuesCloseWaterSqlNameEnum.queryQuesCloseWaterListByCondition);		StringBuilder condition = new StringBuilder();		sql.addVar("@condition", condition.toString());		sql.addVar("@page", "");		List<QuesCloseWaterVo> list = DB.me().queryForBeanList(				MyDatabaseEnum.YiHuNet2008, sql, QuesCloseWaterVo.class);		return list;	}	/**	 * 添加	 */	public int insertQuesCloseWater(QuesCloseWaterVo vo) throws Exception {		Sql sql = DB.me().createSql(				QuesCloseWaterSqlNameEnum.insertQuesCloseWater);		sql.addParamValue(vo.getCreateTime());		sql.addParamValue(vo.getQuesID());		sql.addParamValue(vo.getOperType());		return DB.me().insert(MyDatabaseEnum.YiHuNet2008, sql);	}	/**	 * 修改	 */	public void updateQuesCloseWaterByCondition(QuesCloseWaterVo vo,			JdbcConnection conn) throws Exception {		Sql sql = DB.me().createSql(				QuesCloseWaterSqlNameEnum.updateQuesCloseWaterByCondition);		if (vo == null || StringUtil.isEmpty(vo.getID())) {			throw new Exception(" 不能为空或者 主键id 不能为空");		}		StringBuilder condition = new StringBuilder();		if (condition.length() == 0) {			throw new Exception("未有更新SQL被执行！");		} else {			condition.deleteCharAt(condition.length() - 1);			sql.addVar("@condition", condition.toString());			sql.addParamValue(vo.getID());		}		DB.me().update(conn, sql);	}	public int updateQuesCloseWater(QuesCloseWaterVo vo){		try {			StringBuilder condition = new StringBuilder();			if (vo.getID() > 0) {				condition.append("  QUESMAIN_ID = " + vo.getID());				vo.setID(null);				int r = DB.me().update(						MyDatabaseEnum.YiHuNet2008,						DB.me().createUpdateSql(vo,								MyTableNameEnum.ZiXun_QuesCloseWater,								condition.toString()));				return r;			} else {				return -1;			}		} catch (SQLException e) {			// TODO Auto-generated catch block			e.printStackTrace();			return -1;		}	}}